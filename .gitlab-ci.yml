stages:
  - deploy

# Deploy to Production
deploy:
  stage: deploy
  tags:
    - builder
  image: alpine:latest

  before_script:
    - apk add --no-cache curl openssh git
    - curl -L -o /usr/local/bin/cloudflared https://github.com/cloudflare/cloudflared/releases/download/2024.6.0/cloudflared-linux-amd64
    - chmod +x /usr/local/bin/cloudflared
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh && chmod 700 ~/.ssh
    - echo -e "Host *\n\tStrictHostKeyChecking no\n" > ~/.ssh/config
    - echo -e "Host $HOST\n\tProxyCommand /usr/local/bin/cloudflared access ssh --hostname %h --service-token-id $CLOUDFLARE_ACCESS_CLIENT_ID --service-token-secret $CLOUDFLARE_ACCESS_CLIENT_SECRET\n" >> ~/.ssh/config
    - chmod 600 ~/.ssh/config
  script:
    - |
      cat > .env <<EOF
      # Application Environment Variables
      APP_PORT=${APP_PORT}
      ENVIRONMENT=${ENVIRONMENT}

      # Supabase
      SUPABASE_URL=${SUPABASE_URL}
      SUPABASE_USER=${SUPABASE_USER}
      SUPABASE_PASSWORD=${SUPABASE_PASSWORD}
      ANON_KEY=${ANON_KEY}
      SERVICE_ROLE_KEY=${SERVICE_ROLE_KEY}
      SUPABASE_WEBHOOK_SECRET=${SUPABASE_WEBHOOK_SECRET}

      # Redis
      REDIS_PASSWORD=${REDIS_PASSWORD}
      REDIS_HOST=${REDIS_HOST}
      REDIS_PORT=${REDIS_PORT}
      REDIS_DB=${REDIS_DB}
      REDIS_URL=redis://:${REDIS_PASSWORD}@${REDIS_HOST}:${REDIS_PORT}/${REDIS_DB}

      # Database Configuration
      DATABASE_URL=${DATABASE_URL}

      # AI/Embedding Configuration
      GOOGLE_API_KEY=${GOOGLE_API_KEY}
      EMBEDDING_MODEL_NAME=${EMBEDDING_MODEL_NAME}
      EOF
      chmod 600 .env
    - scp .env ${USER}@${HOST}:${DEPLOY_PATH}/.env
    - |
      ssh ${USER}@${HOST} "
        set -e
        cd ${DEPLOY_PATH} &&
        git pull &&
        cd docker &&
        docker compose down &&
        docker compose up -d --build
      "

  rules:
    - if: $CI_COMMIT_BRANCH == "main"
